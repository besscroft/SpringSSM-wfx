<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace = 所需实现的接口全限定名-->
<mapper namespace="com.bess.dao.UserDAO">
<!--    public User checkLogin(@Param("account") String account,
        @Param("password") String userPwd);  // 登录-->
    <resultMap id="userMap" type="User">
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="account" property="account"/>
        <result column="password" property="userPwd"/>
        <result column="remark" property="remark"/>
        <result column="enabled" property="enabled"/>
        <result column="login_time" property="loginTime"/>
    </resultMap>
    <select id="checkLogin" resultMap="userMap">
        select user_id,user_name,account,password,remark,enabled,login_time
        from user_info where account = #{account} and password = #{userPwd} and enabled=1
    </select>
<!--    public List<User> listUserByPage(@Param("start") int start,
                               @Param("limit") int limit);   // 查询所有用户信息-->
    <select id="listUserByPage" resultSets="java.util.List" resultMap="userMap">
        select user_id,user_name,account,password,remark,enabled,login_time
        from user_info limit #{start},#{limit}
    </select>
<!--    public List<User> listUser();   // 查询所有用户信息-->
    <select id="listUser" resultSets="java.util.List" resultMap="userMap">
        select user_id,user_name,account,password,remark,enabled,login_time
        from user_info
    </select>
<!--    public int updateUser(@Param("userId") String userId,
    @Param("userName") String userName,
    @Param("userPwd") String userPwd,
    @Param("remark") String remark,
    @Param("enabled") String enabled);    // 更新用户信息-->
    <update id="updateUser">
        update user_info
        set user_name = #{userName},password = #{userPwd},remark = #{remark},enabled = #{enabled}
        where user_id = #{userId}
    </update>
<!--    public int deleteUser(@Param("userId") String userId);    // 1.先根据用户id删除用户-->
    <delete id="deleteUser">
        delete from user_info
        where user_id = #{userId}
    </delete>
<!--    public int deleteUserRole(@Param("userId") String userId);  // 2.再根据用户id删除用户角色关系表的数据-->
    <delete id="deleteUserRole">
        delete from sys_user_role
        where user_id = #{userId}
    </delete>
<!--    public int insertUser(User user);   // 添加用户-->
    <insert id="insertUser">
        insert into user_info(user_id,user_name,account,password,remark,enabled)
        values(#{userId},#{userName},#{account},#{userPwd},#{remark},#{enabled});
    </insert>
<!--    public int addUserRole(@Param("userId") String userId,
        @Param("roleId") String roleId);    // 给用户添加角色-->
    <insert id="addUserRole">
        insert into sys_user_role(user_id,role_id)
        values(#{userId},#{roleId});
    </insert>
</mapper>